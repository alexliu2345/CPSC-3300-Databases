/*
	Airline System
    
*/

-- 0. Use Your Database
USE km_airline2021;
USE km_aliu1;
-- Use my database
-- use <your database>;

/*
  Drop Tables so the database starts fresh
*/
-- 1. Drop Tables
	-- Drop existence dependent tables
DROP TABLE IF EXISTS MANIFEST;
DROP TABLE IF EXISTS FLIGHT;
	-- Drop regular entities
DROP TABLE IF EXISTS DESTINATION;
DROP TABLE IF EXISTS PASSENGER;
DROP TABLE IF EXISTS PLANE;

/* 
	Create Tables
*/
-- 2. Create Tables
	-- Create PLANE table
	CREATE TABLE IF NOT EXISTS PLANE(
		PLANE_ID INT AUTO_INCREMENT PRIMARY KEY,
		PLANE_NAME VARCHAR(25) UNIQUE,
		PLANE_MODEL VARCHAR(25) NOT NULL,
		PLANE_ROWS INT,
		PLANE_COLUMNS INT
	);

	-- Create PASSENGER table
	CREATE TABLE IF NOT EXISTS PASSENGER(
		PASSENGER_ID INT AUTO_INCREMENT PRIMARY KEY,
        PASSENGER_NAME_FIRST VARCHAR(25) NOT NULL,
        PASSENGER_NAME_LAST VARCHAR(25) NOT NULL
	);

	-- Create DESTINATION table
	 CREATE TABLE IF NOT EXISTS DESTINATION(
		DESTINATION_ID INT AUTO_INCREMENT PRIMARY KEY,
        DESTINATION_CODE CHAR(3) UNIQUE,
        DESTINATION_NAME VARCHAR(25) NOT NULL
	 );

	-- Create FLIGHT table
	CREATE TABLE IF NOT EXISTS FLIGHT(
		FLIGHT_ID INT AUTO_INCREMENT PRIMARY KEY,
        PLANE_ID INT,
        DESTINATION_ID INT,
        FLIGHT_DATE DATE,
        FOREIGN KEY (PLANE_ID) REFERENCES PLANE(PLANE_ID),
        FOREIGN KEY (DESTINATION_ID) REFERENCES DESTINATION(DESTINATION_ID)
	);

	-- Create MANIFEST table
	CREATE TABLE IF NOT EXISTS MANIFEST(
    PASSENGER_ID INT,
    FLIGHT_ID INT,
    MANIFEST_ROW INT,
    MANIFEST_COLUMN INT,
    FOREIGN KEY (PASSENGER_ID) REFERENCES PASSENGER(PASSENGER_ID),
	FOREIGN KEY (FLIGHT_ID) REFERENCES FLIGHT(FLIGHT_ID),
    PRIMARY KEY (FLIGHT_ID, PASSENGER_ID)
	);

/*
	Import Data from Mike's Database
*/
-- 3. Import Data
	-- Only import the regular entities
	 INSERT INTO PASSENGER (PASSENGER_NAME_LAST, PASSENGER_NAME_FIRST) SELECT PASSENGER_NAME_LAST, PASSENGER_NAME_FIRST FROM km_airline2021.PASSENGER;
	 INSERT INTO PLANE (PLANE_NAME, PLANE_MODEL, PLANE_ROWS, PLANE_COLUMNS) SELECT PLANE_NAME, PLANE_MODEL, PLANE_ROWS, PLANE_COLUMNS FROM km_airline2021.PLANE;
	 INSERT INTO DESTINATION (DESTINATION_NAME, DESTINATION_CODE) SELECT DESTINATION_NAME, DESTINATION_CODE FROM km_airline2021.DESTINATION; 

/*
	Add Data to the System
*/

-- 4. Add data to Flight
	-- Insert into Flight, this insert does a join against a query to get the Plane_ID, and filters to destination code of SEA
		INSERT INTO FLIGHT(DESTINATION_ID, FLIGHT_DATE, PLANE_ID)
		SELECT 
			DESTINATION.DESTINATION_ID, -- Destination ID, not the code 
			CURDATE(), 	-- Current Date
			PLANE.PLANE_ID -- Plane ID not the plane model
		FROM DESTINATION
			INNER JOIN PLANE ON PLANE.PLANE_ID = (SELECT PLANE_ID FROM PLANE WHERE PLANE_MODEL = '777')
		WHERE 
			DESTINATION.DESTINATION_CODE = 'SEA';
	
    SELECT * FROM FLIGHT;

-- 5. Add Mike to a flight
    -- Insert into Manifest the Passenger Mike Koenig onto the flight with plane model 777, and row of 1 column of 1  Need Passenger table and flight joined to plane
  	 INSERT INTO MANIFEST
	 SELECT 
		FLIGHT.FLIGHT_ID, PASSENGER.PASSENGER_ID, 1, 1 
     FROM
		FLIGHT, PASSENGER
        INNER JOIN PLANE ON PLANE_ID
	WHERE
		PASSENGER_NAME_FIRST = 'Mike' AND
        PASSENGER_NAME_LAST = 'Koenig' AND
        PLANE.PLANE_MODEL = '777';
        
        

-- 6. Add Masami to a flight
    -- Insert into Manifest the Passenger Masami Nakata onto the flight with plane model 777, and null for row and column.
  	 INSERT INTO MANIFEST(FLIGHT_ID, PASSENGER_ID)
	 SELECT 
		FLIGHT.FLIGHT_ID, PASSENGER.PASSENGER_ID
		
    FROM
		FLIGHT, PASSENGER
        INNER JOIN PLANE ON PLANE_ID
	
	 WHERE 
		PASSENGER_NAME_FIRST = 'Masami' AND
        PASSENGER_NAME_LAST = 'Nakata' AND
        PLANE.PLANE_MODEL = '777';

SELECT *
FROM MANIFEST;
/*
	Make View
*/


-- 7. Create a View for returning all passengers
	-- Create a View that returns the Flight ID, Date, Destination Code, Plane Model, Full Name, SeatRow, SeatColumn of all passengers
	CREATE OR REPLACE VIEW VIEW_PASSENGERS_ALL AS
		SELECT 
			MANIFEST.FLIGHT_ID, FLIGHT.FLIGHT_DATE, DESTINATION.DESTINATION_CODE, PLANE.PLANE_MODEL, CONCAT(PASSENGER_NAME_LAST,',',PASSENGER_NAME_FIRST) as 'FULLNAME', MANIFEST_ROW AS SEATROW, MANIFEST_COLUMN AS SEATCOLUMN
		FROM 
			MANIFEST 
			INNER JOIN PASSENGER ON PASSENGER.PASSENGER_ID = MANIFEST.PASSENGER_ID
			INNER JOIN FLIGHT ON FLIGHT.FLIGHT_ID = MANIFEST.FLIGHT_ID
            INNER JOIN PLANE ON PLANE.PLANE_ID = FLIGHT.PLANE_ID
            INNER JOIN DESTINATION ON DESTINATION.DESTINATION_ID = FLIGHT.DESTINATION_ID;


-- 8. Create a view for returning passengers with assigned seats
	-- Create/Replace a view called VIEW_PASSENGERS_ASSIGNED.  SELECT FROM the passenger View that shows only the seat assigned passengers on the Flight ID, City Code, Date, PASSENGER Name, Seat Row, Column.
	CREATE OR REPLACE VIEW VIEW_PASSENGERS_ASSIGNED AS
		SELECT 
			FLIGHT.FLIGHT_ID, FLIGHT_DATE, DESTINATION_CODE, CONCAT(PASSENGER_NAME_LAST,',',PASSENGER_NAME_FIRST) as 'FULLNAME', MANIFEST_ROW AS SEATROW, MANIFEST_COLUMN AS SEATCOLUMN
		FROM
			MANIFEST
			INNER JOIN FLIGHT ON FLIGHT.FLIGHT_ID = MANIFEST.FLIGHT_ID
            INNER JOIN DESTINATION ON DESTINATION.DESTINATION_ID = FLIGHT.DESTINATION_ID
			INNER JOIN PASSENGER ON PASSENGER.PASSENGER_ID = MANIFEST.PASSENGER_ID
		WHERE 
			MANIFEST_ROW IS NOT NULL AND 
			MANIFEST_COLUMN IS NOT NULL;

-- 9. Create a view for returning passengers with no seat assignments

	-- Create/Replace a view for VIEW_PASSENGERS_UNASSIGNED, similar to Assigned
	CREATE OR REPLACE VIEW VIEW_PASSENGERS_UNASSIGNED AS
		SELECT MANIFEST.FLIGHT_ID, FLIGHT.FLIGHT_DATE, DESTINATION.DESTINATION_CODE, CONCAT(PASSENGER_NAME_LAST,',',PASSENGER_NAME_FIRST) as 'FULLNAME'
			
		FROM
			MANIFEST
			INNER JOIN FLIGHT ON FLIGHT.FLIGHT_ID = MANIFEST.FLIGHT_ID
            INNER JOIN DESTINATION ON DESTINATION.DESTINATION_ID = FLIGHT.DESTINATION_ID
			INNER JOIN PASSENGER ON PASSENGER.PASSENGER_ID = MANIFEST.PASSENGER_ID
            INNER JOIN PLANE ON PLANE.PLANE_ID = FLIGHT.PLANE_ID
		WHERE 
			MANIFEST_ROW IS NULL AND 
			MANIFEST_COLUMN IS NULL;

        
/* 
	Select from Views
*/

-- 10.  Select from the views
	SELECT * FROM  VIEW_PASSENGERS_ALL;
			-- VIEW_PASSENGERS_ASSIGNED;
			-- VIEW_PASSENGERS_UNASSIGNED;
